"starting".println;

var reference = new `simulink/Sources/Step`;
assert(Step.all.size() = 1);  

var controller = new `simulink/Ports & Subsystems/Subsystem`;
assert(SubSystem.all.size() = 1);  

var plant = new `simulink/Ports & Subsystems/Subsystem`;
assert(SubSystem.all.size() = 2);  

var sum = new `simulink/Math Operations/Sum`;
assert(Sum.all.size() = 1);  

reference.name = "Reference";
assert(reference.name = "Reference");

controller.name = "Controller";
assert(controller.name = "Controller");

plant.name = "Plant";
assert(plant.name = "Plant");

// Position them on the diagram
reference.position = "[100 100 130 130]";
assert(reference.position.at(0) = 100);
assert(reference.position.at(1) = 100);
assert(reference.position.at(2) = 130);
assert(reference.position.at(3) = 130);

sum.position = "[200 100 230 130]";
assert(sum.position.at(0) = 200);
assert(sum.position.at(1) = 100);
assert(sum.position.at(2) = 230);
assert(sum.position.at(3) = 130);

controller.position = "[300 100 400 130]";
assert(controller.position.at(0) = 300);
assert(controller.position.at(1) = 100);
assert(controller.position.at(2) = 400);
assert(controller.position.at(3) = 130);

plant.position = "[500 100 600 130]";
assert(plant.position.at(0) = 500);
assert(plant.position.at(1) = 100);
assert(plant.position.at(2) = 600);
assert(plant.position.at(3) = 130);

// Controller subsystem
var pidController = new `simulink/Continuous/PID Controller`;
assert(SubSystem.all.size() = 3);  

pidController.name = "PID Controller";
assert(pidController.name = "PID Controller");

pidController.parent = controller;  // Parent is read only
"PID 1dof block (mask) parameter 'Parent' is read-only".println;

var error = Inport.all.selectOne(ip|ip.parent = controller and ip.name="In1"); // FIXME
error.name = "Error";
assert(error.name = "Error");

var control = Outport.all.selectOne(op|op.parent = controller and op.name="Out1"); // FIXME

control.name = "Control";
assert(control.name = "Control");

error.unlink(control); // TEST
error.link(pidController); // TEST
pidController.link(control); // TEST

// Plant subsystem
var transferFcn = new `simulink/Continuous/Transfer Fcn`;
assert(TransferFcn.all.size() = 1);  

transferFcn.parent = plant; // Invalid 
"TransferFcn block parameter 'Parent' is read-only".println;

reference.link(sum); // TEST
sum.link(controller); // TEST
controller.link(plant); // TEST
plant.linkTo(sum, 2); // TEST

"finished".println;