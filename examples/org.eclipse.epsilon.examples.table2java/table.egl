[%import "util.eol";%]
package [%=table.package%];
import java.util.List;
import java.util.ArrayList;
import java.util.LinkedHashMap;
[%for (class in table.columns.collect(c|c.type).asSet()){%]
import [%=class%];
[%}%]

public class [%=table.name%] {

    [*Create a list field to store all values*]
    protected List<[%=table.row%]> [%=table.getRows()%] = new ArrayList<>();
    
    [*For each searchable column create a linked hash map to act as an index*]
    [%for (column in table.getSearchableColumns()){%]
    protected LinkedHashMap<[%=column.type.getSimpleName()%], List<[%=table.row%]>> [%=column.name%]Index = new LinkedHashMap<>();
    [%}%]

    public [%=table.row%] add([%=table.columns.collect(column|column.type.getSimpleName() + " " + column.name).concat(", ")%]) {

        [*Create a new row object from the parameters*]
        [%=table.row%] [%=table.row.ftlc()%] = new [%=table.row%]([%=table.columns.collect(column|column.name).concat(", ")%]);
        
        [*Add the row object to the indices of all searchable columns*]
        [%for (column in table.getSearchableColumns()){%]
        List<[%=table.row%]> [%=column.name%]IndexValues = [%=column.name%]Index.get([%=column.name%]);
        if (![%=column.name%]Index.containsKey([%=column.name%])) {
            [%=column.name%]IndexValues = new ArrayList<>();
            [%=column.name%]Index.put([%=column.name%], [%=column.name%]IndexValues);
        }
        [%=column.name%]IndexValues.add([%=table.row.ftlc()%]);

        [%}%]
        [**]
        [*Add the row object to the list of all rows*]
        [%=table.getRows()%].add([%=table.row.ftlc()%]);
        return [%=table.row.ftlc()%];
    }

    [*Create a searchBy method for every searchable column*]
    [%for (column in table.getSearchableColumns()){%]
    public List<[%=table.row%]> searchBy[%=column.name.ftuc()%]([%=column.type.getSimpleName()%] [%=column.name%]) {
        return [%=column.name%]Index.get([%=column.name%]);
    }

    [%}%]
}