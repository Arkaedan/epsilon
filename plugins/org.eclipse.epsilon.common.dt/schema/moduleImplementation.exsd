<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.epsilon.common.dt" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.eclipse.epsilon.common.dt" id="moduleImplementation" name="Module Implementation"/>
      </appinfo>
      <documentation>
         Allow plugins to contribute alternative implementations of Epsilon modules (e.g. incremental or parallel versions).
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="implementation"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="implementation">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class that provides the new module
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.epsilon.common.module.IModule"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the module
               </documentation>
            </annotation>
         </attribute>
         <attribute name="language" type="string" use="required">
            <annotation>
               <documentation>
                  The Epsilon language that the module implements
               </documentation>
            </annotation>
         </attribute>
         <attribute name="dialog" type="string">
            <annotation>
               <documentation>
                  A class that constructs a dialog to configure the module. If the implementation does not need any configuration, then this attribute can be ommited.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.epsilon.common.dt.launching.dialogs.AbstractModuleConfigurationDialog:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="default" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Determines if the implementation is the default one. This is a fallback mechanism when no module information is found in the run configuration. Only the base Epsilon modules should set this property to true.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.6.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
